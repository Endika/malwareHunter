
import readline
import sys, os
import peframe

import myvbox


class main(object):  # Custom completer

    def __init__(self, options):
        self.options = sorted(options)

    def complete(self, text, state):
        if state == 0:  # on first trigger, build possible matches
            if text:  # cache matches (entries that start with entered text)
                self.matches = [s for s in self.options
                                    if s and s.startswith(text)]
            else:  # no text entered, all matches possible
                self.matches = self.options[:]

        # return match indexed by state
        try:
            return self.matches[state]
        except IndexError:
            return None

def static(filename):
       	print "Use <strings> to show strings in the file"
        print "Use <peid> to detect packer signatures"
        print "Use <antidbg> to detect antidebug techniques in the file"
        print "Use <antivm> to detect anti virtualisation techniques in the file"
        print "Use <auto> to auto-analysis the file"
	while True:
               input = raw_input('Static>> ')
               if (input=="strings"):
                    peframe.analyse(filename,"--strings")
               elif (input=="peid"):
                    peframe.analyse(filename,"--peid")
               elif (input=='auto'):
                    peframe.autoanalysis(filename)
	       elif (input=='exit'):
		    return

if not os.geteuid() == 0: sys.exit("\nOnly root can run this script\n")
completer = main(["Use","scan_pcap","scan_ram","static"])
readline.set_completer(completer.complete)
readline.parse_and_bind('tab: complete')
filename = raw_input('Path to file: ')

while(1):
       try:
          input = raw_input('Hunter>> ')
          if (input=="static"):
		static(filename)
          elif (input=="sandbox"):
                print "Dynamic analysis for suspicious files"
                myvbox.myvbox("/home/ask3m/test.exe")
          elif (input=='exit()'):
               sys.exit(0)
          else :
               print "this command is not used"
       except KeyboardInterrupt:
               print "type exit() to stop"
       except EOFError:
               print "type exit() to stop"
