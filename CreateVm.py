__author__ = 'ask3m'
import subprocess

#Create variables out of shell commands
Createvm = "vboxmanage createvm --name winxp --ostype WindowsXP --register"
Modifymem = "vboxmanage modifyvm winxp --memory 512 --acpi on --boot1 dvd"
Modifynet ="VBoxManage modifyvm winxp --nic1 bridged --bridgeadapter1 eth0"
createhard="VBoxManage createhd --filename ./winxp.vdi --size 10000"
storageide='VBoxManage storagectl winxp --name "IDE Controller" --add ide'
attachhard='VBoxManage storageattach winxp --storagectl "IDE Controller" --port 0 --device 0 --type hdd --medium ./winxp.vdi'
attachIso ='VBoxManage storageattach winxp --storagectl "IDE Controller" \--port 1 --device 0 --type dvddrive --medium   path.iso'
startvm="VBoxHeadless --startvm winxp --vrde off &"
#winxp the VM name
#sharedSample the shared folder name in the vm \\\\vboxsvr\\sharedSample
#/home/ask3m/winVm the shared folder in the host machine
createsharedfolder="VBoxManage sharedfolder add winxp --name winVm --hostpath /home/ask3m/winVm --readonly --automount"
createsnap="VBoxManage snapshot winxp take cleanimg"
#Places variables into a list/array
cmds = [Createvm,Modifymem,Modifynet,createhard,storageide,attachhard,attachIso]

#Create a function, that takes a list parameter
#Function uses default keyword parameter of cmds
def configureVm(commands=cmds):
    #Iterates over list, running statements for each item in the list
    count=0
    for cmd in cmds:
        count+=1
        print "Running Command Number %s" % count
        subprocess.call(cmd, shell=True)

def createsharedFolder():
    print "Create shared Folder /home/ask3m/winVm to share sample"
    subprocess.call(createsharedfolder,shell=True)

def runVm():
    print "Running  VM"
    subprocess.call(startvm, shell=True)
def createsnapshot():
    print "taking clean image"
    subprocess(createsnap,shell=True)

#Function runCommand() is called
#runVm()
#createsnapshot()
