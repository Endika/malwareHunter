__author__ = 'ask3m'
import subprocess

VBoxManage createvm --name "io" --register
VBoxManage modifyvm "io" --memory 512 --acpi on --boot1 dvd
VBoxManage modifyvm "io" --nic1 bridged --bridgeadapter1 eth0
VBoxManage createhd --filename ./io.vdi --size 10000
VBoxManage storagectl "io" --name "IDE Controller" --add ide

VBoxManage storageattach "io" --storagectl "IDE Controller" --port 0 --device 0 --type hdd --medium ./io.vdi

VBoxManage storageattach "io" --storagectl "IDE Controller" \--port 1 --device 0 --type dvddrive --medium debian-6.0.2.1-i386-CD-1.iso
VBoxHeadless --startvm "io" &



#Create variables out of shell commands
Createvm = "vboxmanage createvm --name winxp --ostype WindowsXP --register"
Modifymem = "vboxmanage modifyvm winxp --memory 512 --acpi on --boot1 dvd"
Modifynet ="VBoxManage modifyvm winxp --nic1 bridged --bridgeadapter1 eth0"
createhard="VBoxManage createhd --filename ./winxp.vdi --size 10000"
storageide='VBoxManage storagectl winxp --name "IDE Controller" --add ide'
attachhard='VBoxManage storageattach winxp --storagectl "IDE Controller" --port 0 --device 0 --type hdd --medium ./winxp.vdi'
attachIso ='VBoxManage storageattach winxp --storagectl "IDE Controller" \--port 1 --device 0 --type dvddrive --medium   path.iso'
startvm="VBoxHeadless --startvm winxp &"

#Places variables into a list/array
cmds = [Createvm,Modifymem,Modifynet,createhard,storageide,attachhard,attachIso,startvm]

#Create a function, that takes a list parameter
#Function uses default keyword parameter of cmds
def runCommands(commands=cmds):
    #Iterates over list, running statements for each item in the list
    count=0
    for cmd in cmds:
        count+=1
        print "Running Command Number %s" % count
        subprocess.call(cmd, shell=True)

#Function is called
runCommands()
