#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Name            : controller.py
# Version         : 0.1
# Author          : Abdesslem Amri
# Date            : 15-01-2014
# Owner           : Abdesslem Amri
# License         : GPLv2
# Description     : This is the controller of the bottle web application
########################################################################

from PyQt4.QtCore import QCoreApplication, QThread
from bottle import *
from beaker.middleware import SessionMiddleware
from bottle import  BaseRequest

sys.path.insert(0, '/home/ask3m/malwareHunter/mainGui.py')

from mainGui import main
import mainGui

session_opts = {
    'session.type': 'file',
    'session.cookie_expires': 300,
    'session.data_dir': './.sessions',
    'session.auto': True
}

TEMPLATE_PATH.insert(0, 'web/template')
webapp = SessionMiddleware(app(), session_opts)

@route('/static/<path:path>')
def static(path):
    return static_file(path, 'web/template/static/')

# The home page controller
@route('/')
def index():
	if (request.environ.get('beaker.session').get('email', "") == ""): redirect("/login")
	return template('index',user="")

@post('/')
def index():
	import time
	time.sleep(15)
	if (request.environ.get('beaker.session').get('email', "") == ""): redirect("/login")
	return template('index',user="")


@route('/login')
def login():
	if (request.environ.get('beaker.session').get('email', "") != ""): redirect("/")
	return template('login')

# This function Handle the user login
@post('/login')
def login():
	email = request.forms.get('email')
	password = request.forms.get('password')
	if (request.environ.get('beaker.session').get('email', "") != ""): redirect("/")
	if(email != "") and (password == "admin"):
		s = request.environ.get('beaker.session')
		s['email'] = email
		s.save()
		return template('index',user=email)
	else:
		return template('login',)

# This function handle the upload of files
@route('/upload', method='POST')
def do_upload():
        upload = request.files.get('submitfile')
        name, ext = os.path.splitext(upload.filename)
        if ext not in ('.exe'):
           return "File extension not allowed."
        save_path = "/tmp"
        if not os.path.exists(save_path):
            os.makedirs(save_path)

        file_path = "{path}/{file}".format(path=save_path, file=upload.filename)
        upload.save(file_path)
        m= main()
        m.execute()
        m.static(file_path)
        return template('status')

@route('/logout')
def logout():
	if (request.environ.get('beaker.session').get('email', "") == ""): redirect("/login")
	else :
		s = request.environ.get('beaker.session')
		del s["email"]
		s.save()
		redirect("/login")

@route('/quit')
def index():
    QCoreApplication.instance().quit()

class WebApp(QThread):
    def __init__(self):
        QThread.__init__(self)

    def run(self):
        run(webapp, host='localhost', port=8080, quiet=True)
