#!/usr/bin/python
# Copyright (C) 2014 Amri Abdesslem
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#--------------------------------------------------------------------

import sys
from PyQt4.QtCore import *
from PyQt4.QtGui import *
from PyQt4.QtWebKit import *

class Window(QWebView):
    def __init__(self):
        QWebView.__init__(self)
        self.setWindowTitle('Welcome')
        self.setFixedSize(400, 600)
        screen = QDesktopWidget().screenGeometry()
        self.setGeometry((screen.width()-self.width())/2, (screen.height()-self.height())/2, self.width(), self.height())  
        self.load(QUrl('http://ashdworf'))
"""
    @pyqtSlot(QPoint)   
    def ctxMenu(self, point):
        menu = QMenu()
        action1 = menu.addAction("Full screen")
        action2 = menu.addAction("Normal screen") 
        self.connect(action1, SIGNAL("triggered()"), self,SLOT("slotFull()"))
        self.connect(action2, SIGNAL("triggered()"), self,SLOT("slotNormal()"))
        menu.exec_(self.mapToGlobal(point))

    @pyqtSlot()
    def slotFull(self):
        screen = QDesktopWidget().screenGeometry()
        self.setFixedSize(screen.width(),screen.height())
        self.setGeometry((screen.width()-self.width())/2, (screen.height()-self.height())/2, self.width(), self.height())
        self.show()

    @pyqtSlot()
    def slotNormal(self):
        screen = QDesktopWidget().screenGeometry()
        self.setFixedSize(360,460)
        self.setGeometry((screen.width()-self.width())/2, (screen.height()-self.height())/2, self.width(), self.height())
        self.show()
"""

def main():
    	#run(webapp, host='localhost', port=8080, quiet=True,reloader=True)
        app = QApplication(sys.argv)
    	#web = WebApp()
        #web.start()
    	win = Window()
        win.show()
        win.setContextMenuPolicy(Qt.CustomContextMenu);
        win.connect(win,SIGNAL("customContextMenuRequested(QPoint)"), win,SLOT("ctxMenu(QPoint)"))
    	sys.exit(app.exec_())

if __name__ == '__main__':
    main()
